package RodanAndProductsWaits;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;


public class AddProductsWaitsTest {

	WebDriver driver;
	AddProductsWaitsPage add;

	@BeforeMethod
	public void setUp() throws InterruptedException{
		driver=new FirefoxDriver();
		driver.manage().window().maximize();
		driver.get("https://www.rodanandfields.com/ca/");
		driver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);
		add=new AddProductsWaitsPage(driver);
	}

	@Test
	public void testAddProducts() throws InterruptedException{	
		add.shopCare();
		add.selectRedefineAndReverse();
		Assert.assertTrue(add.isRedefinePresent(),"Redefine not present");
		Assert.assertTrue(add.isReversePresent(),"Reverse not present");
		Assert.assertFalse(add.isSoothePresent(),"Soothe is present");
		Assert.assertFalse(add.isUnblemishPresent(),"Unblemish is present");
		Assert.assertFalse(add.isEssentialsPresent(),"Essentials is present");
		Assert.assertFalse(add.isEnhancementsPresent(),"Enhancements is present");
		add.clickPrdAndAddQuantity();
		Assert.assertTrue(add.getSubTotal().contains("CAD$ 2,530.00"),"Mismatched value");
		add.clickOnAnotherPrd();
		Assert.assertTrue(add.verifyCartItem()==2,"Two items are not present");
		add.clickOnDelete();
		Assert.assertTrue(add.verifyCartItemAfterDeletion()==1,"One item is not present");
	}

	@AfterMethod
	public void quitBrowser(){
		driver.quit();
	}
}


